{% extends 'admin.html.twig' %}

{% block body %}
    <center>
    <h1>EVENTS</h1>
    <table border="1">
        <thead>
            <tr>

                <th>Nom Organsiateur</th>
                <th>Nom Event</th>
                <th>Lieu</th>
                <th>Nombre de Place</th>
                <th>Date Event</th>
                <th>Prix (dt)</th>
                <th>Description</th>
                <th>Etat</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        {% for event in events %}
            <tr>

                <td>{{ event.nomOrg }}</td>
                <td>{{ event.nomEvent }}</td>
                <td>{{ event.lieu }}</td>
                <td>{{ event.nbPlace }}</td>
                <td>{% if event.dtEvent %}{{ event.dtEvent|date('Y-m-d') }}{% endif %}</td>
                <td>{{ event.prix }}</td>
                <td>{{ event.description }}</td>
                <td>{{ event.etat }}</td>
                <td>
                    <ul>
                        <li>
                            <a href="{{ path('events_show', { 'idEv': event.idEv }) }}">show</a>
                        </li>
                        <li>
                            <a href="{{ path('events_edit', { 'idEv': event.idEv }) }}">edit</a>
                        </li>
                    </ul>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
        <br>
        <br>
        <form action={{ path("events_new")}}>
        <button>Create NEW</button>
        </form>
        <head>
            <meta charset="utf-8">
            <!-- Nous chargeons les fichiers CDN de Leaflet. Le CSS AVANT le JS -->
            <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
            <style type="text/css">
                #map{ /* la carte DOIT avoir une hauteur sinon elle n'apparaît pas */
                    height:400px;
                    width: 700px;
                }
            </style>
            <title>Carte</title>
        </head>
        <body>
        <div id="map">
            <!-- Ici s'affichera la carte -->
        </div>

        <!-- Fichiers Javascript -->
        <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
        <script type="text/javascript">
            // On initialise la latitude et la longitude de Paris (centre de la carte)
            var lat = 36.8072339;
            var lon = 10.181727;
            var macarte = null;

            // Fonction d'initialisation de la carte
            // Nous initialisons une liste de marqueurs
            var villes = {
                "Tunis": { "lat": 36.807233, "lon": 10.181727 },
                "Mjez El Beb": { "lat": 36.651217, "lon": 9.611889 },
                "Sousse": { "lat": 35.824487, "lon": 10.634488},
                "Touzer": { "lat": 33.918800, "lon": 8.122801 }
            };
            function initMap() {
                var iconBase = 'http://localhost/carte/icons/';
                // Créer l'objet "macarte" et l'insèrer dans l'élément HTML qui a l'ID "map"
                macarte = L.map('map').setView([lat, lon], 11);

                // Leaflet ne récupère pas les cartes (tiles) sur un serveur par défaut. Nous devons lui préciser où nous souhaitons les récupérer. Ici, openstreetmap.fr
                L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {
                    // Il est toujours bien de laisser le lien vers la source des données
                    attribution: 'données © OpenStreetMap/ODbL - rendu OSM France',
                    minZoom: 1,
                    maxZoom: 20
                }).addTo(macarte);
                // Nous parcourons la liste des villes
                for (ville in villes) {
                    // Nous définissons l'icône à utiliser pour le marqueur, sa taille affichée (iconSize), sa position (iconAnchor) et le décalage de son ancrage (popupAnchor)

                    var marker = L.marker([villes[ville].lat, villes[ville].lon]).addTo(macarte);
                    marker.bindPopup(ville);
                }
            }
                window.onload = function(){
                // Fonction d'initialisation qui s'exécute lorsque le DOM est chargé
                initMap();
            };

        </script>
        </body>
    </center>
{% endblock %}
